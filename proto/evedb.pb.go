// Code generated by protoc-gen-go. DO NOT EDIT.
// source: evedb.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Icon is a static icon file.
type Icon struct {
	IconId      int64  `protobuf:"varint,1,opt,name=icon_id,json=iconId" json:"icon_id,omitempty"`
	ImageUrl    string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *Icon) Reset()                    { *m = Icon{} }
func (m *Icon) String() string            { return proto1.CompactTextString(m) }
func (*Icon) ProtoMessage()               {}
func (*Icon) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Icon) GetIconId() int64 {
	if m != nil {
		return m.IconId
	}
	return 0
}

func (m *Icon) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *Icon) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// A Race is a race in EVE.
type Race struct {
	RaceId      int64  `protobuf:"varint,1,opt,name=race_id,json=raceId" json:"race_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ShortDesc   string `protobuf:"bytes,4,opt,name=short_desc,json=shortDesc" json:"short_desc,omitempty"`
	Icon        *Icon  `protobuf:"bytes,5,opt,name=icon" json:"icon,omitempty"`
}

func (m *Race) Reset()                    { *m = Race{} }
func (m *Race) String() string            { return proto1.CompactTextString(m) }
func (*Race) ProtoMessage()               {}
func (*Race) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Race) GetRaceId() int64 {
	if m != nil {
		return m.RaceId
	}
	return 0
}

func (m *Race) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Race) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Race) GetShortDesc() string {
	if m != nil {
		return m.ShortDesc
	}
	return ""
}

func (m *Race) GetIcon() *Icon {
	if m != nil {
		return m.Icon
	}
	return nil
}

// Ancestry describes an ancestry in EVE.
type Ancestry struct {
	AncestryId   int64  `protobuf:"varint,1,opt,name=ancestry_id,json=ancestryId" json:"ancestry_id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	BloodlineId  int64  `protobuf:"varint,4,opt,name=bloodline_id,json=bloodlineId" json:"bloodline_id,omitempty"`
	Perception   int64  `protobuf:"varint,5,opt,name=perception" json:"perception,omitempty"`
	Willpower    int64  `protobuf:"varint,6,opt,name=willpower" json:"willpower,omitempty"`
	Charisma     int64  `protobuf:"varint,7,opt,name=charisma" json:"charisma,omitempty"`
	Memory       int64  `protobuf:"varint,8,opt,name=memory" json:"memory,omitempty"`
	Intelligence int64  `protobuf:"varint,9,opt,name=intelligence" json:"intelligence,omitempty"`
	ShortDesc    string `protobuf:"bytes,10,opt,name=short_desc,json=shortDesc" json:"short_desc,omitempty"`
	Icon         *Icon  `protobuf:"bytes,11,opt,name=icon" json:"icon,omitempty"`
}

func (m *Ancestry) Reset()                    { *m = Ancestry{} }
func (m *Ancestry) String() string            { return proto1.CompactTextString(m) }
func (*Ancestry) ProtoMessage()               {}
func (*Ancestry) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Ancestry) GetAncestryId() int64 {
	if m != nil {
		return m.AncestryId
	}
	return 0
}

func (m *Ancestry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Ancestry) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Ancestry) GetBloodlineId() int64 {
	if m != nil {
		return m.BloodlineId
	}
	return 0
}

func (m *Ancestry) GetPerception() int64 {
	if m != nil {
		return m.Perception
	}
	return 0
}

func (m *Ancestry) GetWillpower() int64 {
	if m != nil {
		return m.Willpower
	}
	return 0
}

func (m *Ancestry) GetCharisma() int64 {
	if m != nil {
		return m.Charisma
	}
	return 0
}

func (m *Ancestry) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Ancestry) GetIntelligence() int64 {
	if m != nil {
		return m.Intelligence
	}
	return 0
}

func (m *Ancestry) GetShortDesc() string {
	if m != nil {
		return m.ShortDesc
	}
	return ""
}

func (m *Ancestry) GetIcon() *Icon {
	if m != nil {
		return m.Icon
	}
	return nil
}

// Bloodline is a bloodline in EVE.
type Bloodline struct {
	BloodlineId     int64  `protobuf:"varint,1,opt,name=bloodline_id,json=bloodlineId" json:"bloodline_id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RaceId          int64  `protobuf:"varint,3,opt,name=race_id,json=raceId" json:"race_id,omitempty"`
	Description     string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	MaleDesc        string `protobuf:"bytes,5,opt,name=male_desc,json=maleDesc" json:"male_desc,omitempty"`
	FemaleDesc      string `protobuf:"bytes,6,opt,name=female_desc,json=femaleDesc" json:"female_desc,omitempty"`
	ShipTypeId      int64  `protobuf:"varint,7,opt,name=ship_type_id,json=shipTypeId" json:"ship_type_id,omitempty"`
	CorporationId   int64  `protobuf:"varint,8,opt,name=corporation_id,json=corporationId" json:"corporation_id,omitempty"`
	Perception      int64  `protobuf:"varint,9,opt,name=perception" json:"perception,omitempty"`
	Willpower       int64  `protobuf:"varint,10,opt,name=willpower" json:"willpower,omitempty"`
	Charisma        int64  `protobuf:"varint,11,opt,name=charisma" json:"charisma,omitempty"`
	Memory          int64  `protobuf:"varint,12,opt,name=memory" json:"memory,omitempty"`
	Intelligence    int64  `protobuf:"varint,13,opt,name=intelligence" json:"intelligence,omitempty"`
	ShortDesc       string `protobuf:"bytes,14,opt,name=short_desc,json=shortDesc" json:"short_desc,omitempty"`
	ShortMaleDesc   string `protobuf:"bytes,15,opt,name=short_male_desc,json=shortMaleDesc" json:"short_male_desc,omitempty"`
	ShortFemaleDesc string `protobuf:"bytes,16,opt,name=short_female_desc,json=shortFemaleDesc" json:"short_female_desc,omitempty"`
	Icon            *Icon  `protobuf:"bytes,17,opt,name=icon" json:"icon,omitempty"`
}

func (m *Bloodline) Reset()                    { *m = Bloodline{} }
func (m *Bloodline) String() string            { return proto1.CompactTextString(m) }
func (*Bloodline) ProtoMessage()               {}
func (*Bloodline) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Bloodline) GetBloodlineId() int64 {
	if m != nil {
		return m.BloodlineId
	}
	return 0
}

func (m *Bloodline) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bloodline) GetRaceId() int64 {
	if m != nil {
		return m.RaceId
	}
	return 0
}

func (m *Bloodline) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Bloodline) GetMaleDesc() string {
	if m != nil {
		return m.MaleDesc
	}
	return ""
}

func (m *Bloodline) GetFemaleDesc() string {
	if m != nil {
		return m.FemaleDesc
	}
	return ""
}

func (m *Bloodline) GetShipTypeId() int64 {
	if m != nil {
		return m.ShipTypeId
	}
	return 0
}

func (m *Bloodline) GetCorporationId() int64 {
	if m != nil {
		return m.CorporationId
	}
	return 0
}

func (m *Bloodline) GetPerception() int64 {
	if m != nil {
		return m.Perception
	}
	return 0
}

func (m *Bloodline) GetWillpower() int64 {
	if m != nil {
		return m.Willpower
	}
	return 0
}

func (m *Bloodline) GetCharisma() int64 {
	if m != nil {
		return m.Charisma
	}
	return 0
}

func (m *Bloodline) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Bloodline) GetIntelligence() int64 {
	if m != nil {
		return m.Intelligence
	}
	return 0
}

func (m *Bloodline) GetShortDesc() string {
	if m != nil {
		return m.ShortDesc
	}
	return ""
}

func (m *Bloodline) GetShortMaleDesc() string {
	if m != nil {
		return m.ShortMaleDesc
	}
	return ""
}

func (m *Bloodline) GetShortFemaleDesc() string {
	if m != nil {
		return m.ShortFemaleDesc
	}
	return ""
}

func (m *Bloodline) GetIcon() *Icon {
	if m != nil {
		return m.Icon
	}
	return nil
}

// System is a solar system in the EVE universe.
type System struct {
	SystemId        int64   `protobuf:"varint,1,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	Name            string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RegionId        int64   `protobuf:"varint,3,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	ConstellationId int64   `protobuf:"varint,4,opt,name=constellation_id,json=constellationId" json:"constellation_id,omitempty"`
	Security        float64 `protobuf:"fixed64,5,opt,name=security" json:"security,omitempty"`
}

func (m *System) Reset()                    { *m = System{} }
func (m *System) String() string            { return proto1.CompactTextString(m) }
func (*System) ProtoMessage()               {}
func (*System) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *System) GetSystemId() int64 {
	if m != nil {
		return m.SystemId
	}
	return 0
}

func (m *System) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *System) GetRegionId() int64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

func (m *System) GetConstellationId() int64 {
	if m != nil {
		return m.ConstellationId
	}
	return 0
}

func (m *System) GetSecurity() float64 {
	if m != nil {
		return m.Security
	}
	return 0
}

// Constellation is a constellation in the EVE universe.
type Constellation struct {
	ConstellationId int64  `protobuf:"varint,1,opt,name=constellation_id,json=constellationId" json:"constellation_id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RegionId        int64  `protobuf:"varint,3,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
}

func (m *Constellation) Reset()                    { *m = Constellation{} }
func (m *Constellation) String() string            { return proto1.CompactTextString(m) }
func (*Constellation) ProtoMessage()               {}
func (*Constellation) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *Constellation) GetConstellationId() int64 {
	if m != nil {
		return m.ConstellationId
	}
	return 0
}

func (m *Constellation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Constellation) GetRegionId() int64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

// Region is a region of space in the EVE universe.
type Region struct {
	RegionId int64  `protobuf:"varint,1,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Region) Reset()                    { *m = Region{} }
func (m *Region) String() string            { return proto1.CompactTextString(m) }
func (*Region) ProtoMessage()               {}
func (*Region) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *Region) GetRegionId() int64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

func (m *Region) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Station is a NPC station in the EVE universe.
type Station struct {
	StationId       int64  `protobuf:"varint,1,opt,name=station_id,json=stationId" json:"station_id,omitempty"`
	StationTypeId   int64  `protobuf:"varint,2,opt,name=station_type_id,json=stationTypeId" json:"station_type_id,omitempty"`
	CorporationId   int64  `protobuf:"varint,3,opt,name=corporation_id,json=corporationId" json:"corporation_id,omitempty"`
	SystemId        int64  `protobuf:"varint,4,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	ConstellationId int64  `protobuf:"varint,5,opt,name=constellation_id,json=constellationId" json:"constellation_id,omitempty"`
	RegionId        int64  `protobuf:"varint,6,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	Name            string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
}

func (m *Station) Reset()                    { *m = Station{} }
func (m *Station) String() string            { return proto1.CompactTextString(m) }
func (*Station) ProtoMessage()               {}
func (*Station) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *Station) GetStationId() int64 {
	if m != nil {
		return m.StationId
	}
	return 0
}

func (m *Station) GetStationTypeId() int64 {
	if m != nil {
		return m.StationTypeId
	}
	return 0
}

func (m *Station) GetCorporationId() int64 {
	if m != nil {
		return m.CorporationId
	}
	return 0
}

func (m *Station) GetSystemId() int64 {
	if m != nil {
		return m.SystemId
	}
	return 0
}

func (m *Station) GetConstellationId() int64 {
	if m != nil {
		return m.ConstellationId
	}
	return 0
}

func (m *Station) GetRegionId() int64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

func (m *Station) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// ItemType is basic information about an item in the EVE universe.
type ItemType struct {
	TypeId      int64  `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ItemType) Reset()                    { *m = ItemType{} }
func (m *ItemType) String() string            { return proto1.CompactTextString(m) }
func (*ItemType) ProtoMessage()               {}
func (*ItemType) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *ItemType) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *ItemType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ItemType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// ItemTypeDetail is detailed information about an item in the EVE universe.
type ItemTypeDetail struct {
	TypeId           int64   `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description      string  `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	GroupId          int64   `protobuf:"varint,4,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	GroupName        string  `protobuf:"bytes,5,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	CategoryId       int64   `protobuf:"varint,6,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	CategoryName     string  `protobuf:"bytes,7,opt,name=category_name,json=categoryName" json:"category_name,omitempty"`
	Mass             float64 `protobuf:"fixed64,8,opt,name=mass" json:"mass,omitempty"`
	Volume           float64 `protobuf:"fixed64,9,opt,name=volume" json:"volume,omitempty"`
	Capacity         float64 `protobuf:"fixed64,10,opt,name=capacity" json:"capacity,omitempty"`
	PortionSize      int64   `protobuf:"varint,11,opt,name=portion_size,json=portionSize" json:"portion_size,omitempty"`
	BasePrice        float64 `protobuf:"fixed64,12,opt,name=base_price,json=basePrice" json:"base_price,omitempty"`
	ParentTypeId     int64   `protobuf:"varint,13,opt,name=parent_type_id,json=parentTypeId" json:"parent_type_id,omitempty"`
	BlueprintId      int64   `protobuf:"varint,14,opt,name=blueprint_id,json=blueprintId" json:"blueprint_id,omitempty"`
	DerivativeTypeId []int64 `protobuf:"varint,15,rep,packed,name=derivative_type_id,json=derivativeTypeId" json:"derivative_type_id,omitempty"`
}

func (m *ItemTypeDetail) Reset()                    { *m = ItemTypeDetail{} }
func (m *ItemTypeDetail) String() string            { return proto1.CompactTextString(m) }
func (*ItemTypeDetail) ProtoMessage()               {}
func (*ItemTypeDetail) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *ItemTypeDetail) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *ItemTypeDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ItemTypeDetail) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ItemTypeDetail) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ItemTypeDetail) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *ItemTypeDetail) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *ItemTypeDetail) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *ItemTypeDetail) GetMass() float64 {
	if m != nil {
		return m.Mass
	}
	return 0
}

func (m *ItemTypeDetail) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *ItemTypeDetail) GetCapacity() float64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *ItemTypeDetail) GetPortionSize() int64 {
	if m != nil {
		return m.PortionSize
	}
	return 0
}

func (m *ItemTypeDetail) GetBasePrice() float64 {
	if m != nil {
		return m.BasePrice
	}
	return 0
}

func (m *ItemTypeDetail) GetParentTypeId() int64 {
	if m != nil {
		return m.ParentTypeId
	}
	return 0
}

func (m *ItemTypeDetail) GetBlueprintId() int64 {
	if m != nil {
		return m.BlueprintId
	}
	return 0
}

func (m *ItemTypeDetail) GetDerivativeTypeId() []int64 {
	if m != nil {
		return m.DerivativeTypeId
	}
	return nil
}

// A MaterialSheet describes what is necessary to build an item.
type MaterialSheet struct {
	Type        *ItemType   `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Materials   []*Material `protobuf:"bytes,2,rep,name=materials" json:"materials,omitempty"`
	ProducesQty int64       `protobuf:"varint,3,opt,name=produces_qty,json=producesQty" json:"produces_qty,omitempty"`
}

func (m *MaterialSheet) Reset()                    { *m = MaterialSheet{} }
func (m *MaterialSheet) String() string            { return proto1.CompactTextString(m) }
func (*MaterialSheet) ProtoMessage()               {}
func (*MaterialSheet) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *MaterialSheet) GetType() *ItemType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MaterialSheet) GetMaterials() []*Material {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *MaterialSheet) GetProducesQty() int64 {
	if m != nil {
		return m.ProducesQty
	}
	return 0
}

// A Material is a type and quantity of an item used for manufacturing.
type Material struct {
	Type     *ItemType `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Quantity int64     `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *Material) Reset()                    { *m = Material{} }
func (m *Material) String() string            { return proto1.CompactTextString(m) }
func (*Material) ProtoMessage()               {}
func (*Material) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *Material) GetType() *ItemType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Material) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type GetRegionRequest struct {
	RegionId int64 `protobuf:"varint,1,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
}

func (m *GetRegionRequest) Reset()                    { *m = GetRegionRequest{} }
func (m *GetRegionRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetRegionRequest) ProtoMessage()               {}
func (*GetRegionRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *GetRegionRequest) GetRegionId() int64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

type GetRegionResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Region *Region `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
}

func (m *GetRegionResponse) Reset()                    { *m = GetRegionResponse{} }
func (m *GetRegionResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetRegionResponse) ProtoMessage()               {}
func (*GetRegionResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *GetRegionResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetRegionResponse) GetRegion() *Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type GetRegionsRequest struct {
}

func (m *GetRegionsRequest) Reset()                    { *m = GetRegionsRequest{} }
func (m *GetRegionsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetRegionsRequest) ProtoMessage()               {}
func (*GetRegionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

type GetRegionsResponse struct {
	Result *Result   `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Region []*Region `protobuf:"bytes,2,rep,name=region" json:"region,omitempty"`
}

func (m *GetRegionsResponse) Reset()                    { *m = GetRegionsResponse{} }
func (m *GetRegionsResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetRegionsResponse) ProtoMessage()               {}
func (*GetRegionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *GetRegionsResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetRegionsResponse) GetRegion() []*Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type GetConstellationRequest struct {
	ConstellationId int64 `protobuf:"varint,1,opt,name=constellation_id,json=constellationId" json:"constellation_id,omitempty"`
}

func (m *GetConstellationRequest) Reset()                    { *m = GetConstellationRequest{} }
func (m *GetConstellationRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetConstellationRequest) ProtoMessage()               {}
func (*GetConstellationRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *GetConstellationRequest) GetConstellationId() int64 {
	if m != nil {
		return m.ConstellationId
	}
	return 0
}

type GetConstellationResponse struct {
	Result        *Result        `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Constellation *Constellation `protobuf:"bytes,2,opt,name=constellation" json:"constellation,omitempty"`
}

func (m *GetConstellationResponse) Reset()                    { *m = GetConstellationResponse{} }
func (m *GetConstellationResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetConstellationResponse) ProtoMessage()               {}
func (*GetConstellationResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *GetConstellationResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetConstellationResponse) GetConstellation() *Constellation {
	if m != nil {
		return m.Constellation
	}
	return nil
}

type GetSystemRequest struct {
	SystemId int64 `protobuf:"varint,1,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
}

func (m *GetSystemRequest) Reset()                    { *m = GetSystemRequest{} }
func (m *GetSystemRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSystemRequest) ProtoMessage()               {}
func (*GetSystemRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *GetSystemRequest) GetSystemId() int64 {
	if m != nil {
		return m.SystemId
	}
	return 0
}

type GetSystemResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	System *System `protobuf:"bytes,2,opt,name=system" json:"system,omitempty"`
}

func (m *GetSystemResponse) Reset()                    { *m = GetSystemResponse{} }
func (m *GetSystemResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetSystemResponse) ProtoMessage()               {}
func (*GetSystemResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *GetSystemResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetSystemResponse) GetSystem() *System {
	if m != nil {
		return m.System
	}
	return nil
}

type GetRaceRequest struct {
	RaceId int64 `protobuf:"varint,1,opt,name=race_id,json=raceId" json:"race_id,omitempty"`
}

func (m *GetRaceRequest) Reset()                    { *m = GetRaceRequest{} }
func (m *GetRaceRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetRaceRequest) ProtoMessage()               {}
func (*GetRaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func (m *GetRaceRequest) GetRaceId() int64 {
	if m != nil {
		return m.RaceId
	}
	return 0
}

type GetRaceResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Race   *Race   `protobuf:"bytes,2,opt,name=race" json:"race,omitempty"`
}

func (m *GetRaceResponse) Reset()                    { *m = GetRaceResponse{} }
func (m *GetRaceResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetRaceResponse) ProtoMessage()               {}
func (*GetRaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *GetRaceResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetRaceResponse) GetRace() *Race {
	if m != nil {
		return m.Race
	}
	return nil
}

type GetRacesRequest struct {
}

func (m *GetRacesRequest) Reset()                    { *m = GetRacesRequest{} }
func (m *GetRacesRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetRacesRequest) ProtoMessage()               {}
func (*GetRacesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

type GetRacesResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Race   []*Race `protobuf:"bytes,2,rep,name=race" json:"race,omitempty"`
}

func (m *GetRacesResponse) Reset()                    { *m = GetRacesResponse{} }
func (m *GetRacesResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetRacesResponse) ProtoMessage()               {}
func (*GetRacesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *GetRacesResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetRacesResponse) GetRace() []*Race {
	if m != nil {
		return m.Race
	}
	return nil
}

type GetBloodlineRequest struct {
	BloodlineId int64 `protobuf:"varint,1,opt,name=bloodline_id,json=bloodlineId" json:"bloodline_id,omitempty"`
}

func (m *GetBloodlineRequest) Reset()                    { *m = GetBloodlineRequest{} }
func (m *GetBloodlineRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetBloodlineRequest) ProtoMessage()               {}
func (*GetBloodlineRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *GetBloodlineRequest) GetBloodlineId() int64 {
	if m != nil {
		return m.BloodlineId
	}
	return 0
}

type GetBloodlineResponse struct {
	Result    *Result    `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Bloodline *Bloodline `protobuf:"bytes,2,opt,name=bloodline" json:"bloodline,omitempty"`
}

func (m *GetBloodlineResponse) Reset()                    { *m = GetBloodlineResponse{} }
func (m *GetBloodlineResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetBloodlineResponse) ProtoMessage()               {}
func (*GetBloodlineResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{25} }

func (m *GetBloodlineResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetBloodlineResponse) GetBloodline() *Bloodline {
	if m != nil {
		return m.Bloodline
	}
	return nil
}

type GetAncestryRequest struct {
	AncestryId int64 `protobuf:"varint,1,opt,name=ancestry_id,json=ancestryId" json:"ancestry_id,omitempty"`
}

func (m *GetAncestryRequest) Reset()                    { *m = GetAncestryRequest{} }
func (m *GetAncestryRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAncestryRequest) ProtoMessage()               {}
func (*GetAncestryRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{26} }

func (m *GetAncestryRequest) GetAncestryId() int64 {
	if m != nil {
		return m.AncestryId
	}
	return 0
}

type GetAncestryResponse struct {
	Result   *Result   `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Ancestry *Ancestry `protobuf:"bytes,2,opt,name=ancestry" json:"ancestry,omitempty"`
}

func (m *GetAncestryResponse) Reset()                    { *m = GetAncestryResponse{} }
func (m *GetAncestryResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetAncestryResponse) ProtoMessage()               {}
func (*GetAncestryResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{27} }

func (m *GetAncestryResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetAncestryResponse) GetAncestry() *Ancestry {
	if m != nil {
		return m.Ancestry
	}
	return nil
}

type GetItemTypeRequest struct {
	TypeId int64 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
}

func (m *GetItemTypeRequest) Reset()                    { *m = GetItemTypeRequest{} }
func (m *GetItemTypeRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetItemTypeRequest) ProtoMessage()               {}
func (*GetItemTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{28} }

func (m *GetItemTypeRequest) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

type GetItemTypeResponse struct {
	Result *Result   `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Type   *ItemType `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *GetItemTypeResponse) Reset()                    { *m = GetItemTypeResponse{} }
func (m *GetItemTypeResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetItemTypeResponse) ProtoMessage()               {}
func (*GetItemTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{29} }

func (m *GetItemTypeResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetItemTypeResponse) GetType() *ItemType {
	if m != nil {
		return m.Type
	}
	return nil
}

type GetItemTypeDetailRequest struct {
	TypeId int64 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
}

func (m *GetItemTypeDetailRequest) Reset()                    { *m = GetItemTypeDetailRequest{} }
func (m *GetItemTypeDetailRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetItemTypeDetailRequest) ProtoMessage()               {}
func (*GetItemTypeDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{30} }

func (m *GetItemTypeDetailRequest) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

type GetItemTypeDetailResponse struct {
	Result *Result         `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Type   *ItemTypeDetail `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *GetItemTypeDetailResponse) Reset()                    { *m = GetItemTypeDetailResponse{} }
func (m *GetItemTypeDetailResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetItemTypeDetailResponse) ProtoMessage()               {}
func (*GetItemTypeDetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{31} }

func (m *GetItemTypeDetailResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetItemTypeDetailResponse) GetType() *ItemTypeDetail {
	if m != nil {
		return m.Type
	}
	return nil
}

type QueryItemTypesRequest struct {
	Query      string  `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	CategoryId []int64 `protobuf:"varint,2,rep,packed,name=category_id,json=categoryId" json:"category_id,omitempty"`
}

func (m *QueryItemTypesRequest) Reset()                    { *m = QueryItemTypesRequest{} }
func (m *QueryItemTypesRequest) String() string            { return proto1.CompactTextString(m) }
func (*QueryItemTypesRequest) ProtoMessage()               {}
func (*QueryItemTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{32} }

func (m *QueryItemTypesRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *QueryItemTypesRequest) GetCategoryId() []int64 {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

type QueryItemTypesResponse struct {
	Result *Result     `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Types  []*ItemType `protobuf:"bytes,2,rep,name=types" json:"types,omitempty"`
}

func (m *QueryItemTypesResponse) Reset()                    { *m = QueryItemTypesResponse{} }
func (m *QueryItemTypesResponse) String() string            { return proto1.CompactTextString(m) }
func (*QueryItemTypesResponse) ProtoMessage()               {}
func (*QueryItemTypesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{33} }

func (m *QueryItemTypesResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *QueryItemTypesResponse) GetTypes() []*ItemType {
	if m != nil {
		return m.Types
	}
	return nil
}

type QueryItemTypeDetailsRequest struct {
	Query      string  `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	CategoryId []int64 `protobuf:"varint,2,rep,packed,name=category_id,json=categoryId" json:"category_id,omitempty"`
}

func (m *QueryItemTypeDetailsRequest) Reset()                    { *m = QueryItemTypeDetailsRequest{} }
func (m *QueryItemTypeDetailsRequest) String() string            { return proto1.CompactTextString(m) }
func (*QueryItemTypeDetailsRequest) ProtoMessage()               {}
func (*QueryItemTypeDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{34} }

func (m *QueryItemTypeDetailsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *QueryItemTypeDetailsRequest) GetCategoryId() []int64 {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

type QueryItemTypeDetailsResponse struct {
	Result *Result           `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Types  []*ItemTypeDetail `protobuf:"bytes,2,rep,name=types" json:"types,omitempty"`
}

func (m *QueryItemTypeDetailsResponse) Reset()                    { *m = QueryItemTypeDetailsResponse{} }
func (m *QueryItemTypeDetailsResponse) String() string            { return proto1.CompactTextString(m) }
func (*QueryItemTypeDetailsResponse) ProtoMessage()               {}
func (*QueryItemTypeDetailsResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{35} }

func (m *QueryItemTypeDetailsResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *QueryItemTypeDetailsResponse) GetTypes() []*ItemTypeDetail {
	if m != nil {
		return m.Types
	}
	return nil
}

type GetMaterialSheetRequest struct {
	TypeId int64 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
}

func (m *GetMaterialSheetRequest) Reset()                    { *m = GetMaterialSheetRequest{} }
func (m *GetMaterialSheetRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetMaterialSheetRequest) ProtoMessage()               {}
func (*GetMaterialSheetRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{36} }

func (m *GetMaterialSheetRequest) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

type GetMaterialSheetResponse struct {
	Result   *Result        `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	MatSheet *MaterialSheet `protobuf:"bytes,2,opt,name=mat_sheet,json=matSheet" json:"mat_sheet,omitempty"`
}

func (m *GetMaterialSheetResponse) Reset()                    { *m = GetMaterialSheetResponse{} }
func (m *GetMaterialSheetResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetMaterialSheetResponse) ProtoMessage()               {}
func (*GetMaterialSheetResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{37} }

func (m *GetMaterialSheetResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetMaterialSheetResponse) GetMatSheet() *MaterialSheet {
	if m != nil {
		return m.MatSheet
	}
	return nil
}

type GetStationRequest struct {
	StationId int64 `protobuf:"varint,1,opt,name=station_id,json=stationId" json:"station_id,omitempty"`
}

func (m *GetStationRequest) Reset()                    { *m = GetStationRequest{} }
func (m *GetStationRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStationRequest) ProtoMessage()               {}
func (*GetStationRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{38} }

func (m *GetStationRequest) GetStationId() int64 {
	if m != nil {
		return m.StationId
	}
	return 0
}

type GetStationResponse struct {
	Result  *Result  `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Station *Station `protobuf:"bytes,2,opt,name=station" json:"station,omitempty"`
}

func (m *GetStationResponse) Reset()                    { *m = GetStationResponse{} }
func (m *GetStationResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetStationResponse) ProtoMessage()               {}
func (*GetStationResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{39} }

func (m *GetStationResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetStationResponse) GetStation() *Station {
	if m != nil {
		return m.Station
	}
	return nil
}

func init() {
	proto1.RegisterType((*Icon)(nil), "motki.evedb.Icon")
	proto1.RegisterType((*Race)(nil), "motki.evedb.Race")
	proto1.RegisterType((*Ancestry)(nil), "motki.evedb.Ancestry")
	proto1.RegisterType((*Bloodline)(nil), "motki.evedb.Bloodline")
	proto1.RegisterType((*System)(nil), "motki.evedb.System")
	proto1.RegisterType((*Constellation)(nil), "motki.evedb.Constellation")
	proto1.RegisterType((*Region)(nil), "motki.evedb.Region")
	proto1.RegisterType((*Station)(nil), "motki.evedb.Station")
	proto1.RegisterType((*ItemType)(nil), "motki.evedb.ItemType")
	proto1.RegisterType((*ItemTypeDetail)(nil), "motki.evedb.ItemTypeDetail")
	proto1.RegisterType((*MaterialSheet)(nil), "motki.evedb.MaterialSheet")
	proto1.RegisterType((*Material)(nil), "motki.evedb.Material")
	proto1.RegisterType((*GetRegionRequest)(nil), "motki.evedb.GetRegionRequest")
	proto1.RegisterType((*GetRegionResponse)(nil), "motki.evedb.GetRegionResponse")
	proto1.RegisterType((*GetRegionsRequest)(nil), "motki.evedb.GetRegionsRequest")
	proto1.RegisterType((*GetRegionsResponse)(nil), "motki.evedb.GetRegionsResponse")
	proto1.RegisterType((*GetConstellationRequest)(nil), "motki.evedb.GetConstellationRequest")
	proto1.RegisterType((*GetConstellationResponse)(nil), "motki.evedb.GetConstellationResponse")
	proto1.RegisterType((*GetSystemRequest)(nil), "motki.evedb.GetSystemRequest")
	proto1.RegisterType((*GetSystemResponse)(nil), "motki.evedb.GetSystemResponse")
	proto1.RegisterType((*GetRaceRequest)(nil), "motki.evedb.GetRaceRequest")
	proto1.RegisterType((*GetRaceResponse)(nil), "motki.evedb.GetRaceResponse")
	proto1.RegisterType((*GetRacesRequest)(nil), "motki.evedb.GetRacesRequest")
	proto1.RegisterType((*GetRacesResponse)(nil), "motki.evedb.GetRacesResponse")
	proto1.RegisterType((*GetBloodlineRequest)(nil), "motki.evedb.GetBloodlineRequest")
	proto1.RegisterType((*GetBloodlineResponse)(nil), "motki.evedb.GetBloodlineResponse")
	proto1.RegisterType((*GetAncestryRequest)(nil), "motki.evedb.GetAncestryRequest")
	proto1.RegisterType((*GetAncestryResponse)(nil), "motki.evedb.GetAncestryResponse")
	proto1.RegisterType((*GetItemTypeRequest)(nil), "motki.evedb.GetItemTypeRequest")
	proto1.RegisterType((*GetItemTypeResponse)(nil), "motki.evedb.GetItemTypeResponse")
	proto1.RegisterType((*GetItemTypeDetailRequest)(nil), "motki.evedb.GetItemTypeDetailRequest")
	proto1.RegisterType((*GetItemTypeDetailResponse)(nil), "motki.evedb.GetItemTypeDetailResponse")
	proto1.RegisterType((*QueryItemTypesRequest)(nil), "motki.evedb.QueryItemTypesRequest")
	proto1.RegisterType((*QueryItemTypesResponse)(nil), "motki.evedb.QueryItemTypesResponse")
	proto1.RegisterType((*QueryItemTypeDetailsRequest)(nil), "motki.evedb.QueryItemTypeDetailsRequest")
	proto1.RegisterType((*QueryItemTypeDetailsResponse)(nil), "motki.evedb.QueryItemTypeDetailsResponse")
	proto1.RegisterType((*GetMaterialSheetRequest)(nil), "motki.evedb.GetMaterialSheetRequest")
	proto1.RegisterType((*GetMaterialSheetResponse)(nil), "motki.evedb.GetMaterialSheetResponse")
	proto1.RegisterType((*GetStationRequest)(nil), "motki.evedb.GetStationRequest")
	proto1.RegisterType((*GetStationResponse)(nil), "motki.evedb.GetStationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EveDBService service

type EveDBServiceClient interface {
	// GetRegion gets a specific region.
	GetRegion(ctx context.Context, in *GetRegionRequest, opts ...grpc.CallOption) (*GetRegionResponse, error)
	// GetRegions returns a list of all regions.
	GetRegions(ctx context.Context, in *GetRegionsRequest, opts ...grpc.CallOption) (*GetRegionsResponse, error)
	// GetConstellation gets a specific constellation.
	GetConstellation(ctx context.Context, in *GetConstellationRequest, opts ...grpc.CallOption) (*GetConstellationResponse, error)
	// GetSystem gets a specific solar system.
	GetSystem(ctx context.Context, in *GetSystemRequest, opts ...grpc.CallOption) (*GetSystemResponse, error)
	// GetStation gets a specific station.
	GetStation(ctx context.Context, in *GetStationRequest, opts ...grpc.CallOption) (*GetStationResponse, error)
	// GetRace gets a specific race.
	GetRace(ctx context.Context, in *GetRaceRequest, opts ...grpc.CallOption) (*GetRaceResponse, error)
	// GetRaces returns a list of all races.
	GetRaces(ctx context.Context, in *GetRacesRequest, opts ...grpc.CallOption) (*GetRacesResponse, error)
	// GetBloodline gets a specific bloodline.
	GetBloodline(ctx context.Context, in *GetBloodlineRequest, opts ...grpc.CallOption) (*GetBloodlineResponse, error)
	// GetAncestry gets a specific ancestry.
	GetAncestry(ctx context.Context, in *GetAncestryRequest, opts ...grpc.CallOption) (*GetAncestryResponse, error)
	// GetItemType gets the basic information for a specific item type.
	GetItemType(ctx context.Context, in *GetItemTypeRequest, opts ...grpc.CallOption) (*GetItemTypeResponse, error)
	// GetItemTypeDetail gets the detailed information for a specific item type.
	GetItemTypeDetail(ctx context.Context, in *GetItemTypeDetailRequest, opts ...grpc.CallOption) (*GetItemTypeDetailResponse, error)
	// GetMaterialSheet gets a list of materials required to produce an item.
	GetMaterialSheet(ctx context.Context, in *GetMaterialSheetRequest, opts ...grpc.CallOption) (*GetMaterialSheetResponse, error)
	// QueryItemTypes returns basic information for types matching the input query.
	QueryItemTypes(ctx context.Context, in *QueryItemTypesRequest, opts ...grpc.CallOption) (*QueryItemTypesResponse, error)
	// QueryItemTypeDetails returns detailed information for types matching the input query.
	QueryItemTypeDetails(ctx context.Context, in *QueryItemTypeDetailsRequest, opts ...grpc.CallOption) (*QueryItemTypeDetailsResponse, error)
}

type eveDBServiceClient struct {
	cc *grpc.ClientConn
}

func NewEveDBServiceClient(cc *grpc.ClientConn) EveDBServiceClient {
	return &eveDBServiceClient{cc}
}

func (c *eveDBServiceClient) GetRegion(ctx context.Context, in *GetRegionRequest, opts ...grpc.CallOption) (*GetRegionResponse, error) {
	out := new(GetRegionResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetRegion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetRegions(ctx context.Context, in *GetRegionsRequest, opts ...grpc.CallOption) (*GetRegionsResponse, error) {
	out := new(GetRegionsResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetRegions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetConstellation(ctx context.Context, in *GetConstellationRequest, opts ...grpc.CallOption) (*GetConstellationResponse, error) {
	out := new(GetConstellationResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetConstellation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetSystem(ctx context.Context, in *GetSystemRequest, opts ...grpc.CallOption) (*GetSystemResponse, error) {
	out := new(GetSystemResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetSystem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetStation(ctx context.Context, in *GetStationRequest, opts ...grpc.CallOption) (*GetStationResponse, error) {
	out := new(GetStationResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetStation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetRace(ctx context.Context, in *GetRaceRequest, opts ...grpc.CallOption) (*GetRaceResponse, error) {
	out := new(GetRaceResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetRace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetRaces(ctx context.Context, in *GetRacesRequest, opts ...grpc.CallOption) (*GetRacesResponse, error) {
	out := new(GetRacesResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetRaces", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetBloodline(ctx context.Context, in *GetBloodlineRequest, opts ...grpc.CallOption) (*GetBloodlineResponse, error) {
	out := new(GetBloodlineResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetBloodline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetAncestry(ctx context.Context, in *GetAncestryRequest, opts ...grpc.CallOption) (*GetAncestryResponse, error) {
	out := new(GetAncestryResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetAncestry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetItemType(ctx context.Context, in *GetItemTypeRequest, opts ...grpc.CallOption) (*GetItemTypeResponse, error) {
	out := new(GetItemTypeResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetItemType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetItemTypeDetail(ctx context.Context, in *GetItemTypeDetailRequest, opts ...grpc.CallOption) (*GetItemTypeDetailResponse, error) {
	out := new(GetItemTypeDetailResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetItemTypeDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) GetMaterialSheet(ctx context.Context, in *GetMaterialSheetRequest, opts ...grpc.CallOption) (*GetMaterialSheetResponse, error) {
	out := new(GetMaterialSheetResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/GetMaterialSheet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) QueryItemTypes(ctx context.Context, in *QueryItemTypesRequest, opts ...grpc.CallOption) (*QueryItemTypesResponse, error) {
	out := new(QueryItemTypesResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/QueryItemTypes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveDBServiceClient) QueryItemTypeDetails(ctx context.Context, in *QueryItemTypeDetailsRequest, opts ...grpc.CallOption) (*QueryItemTypeDetailsResponse, error) {
	out := new(QueryItemTypeDetailsResponse)
	err := grpc.Invoke(ctx, "/motki.evedb.EveDBService/QueryItemTypeDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EveDBService service

type EveDBServiceServer interface {
	// GetRegion gets a specific region.
	GetRegion(context.Context, *GetRegionRequest) (*GetRegionResponse, error)
	// GetRegions returns a list of all regions.
	GetRegions(context.Context, *GetRegionsRequest) (*GetRegionsResponse, error)
	// GetConstellation gets a specific constellation.
	GetConstellation(context.Context, *GetConstellationRequest) (*GetConstellationResponse, error)
	// GetSystem gets a specific solar system.
	GetSystem(context.Context, *GetSystemRequest) (*GetSystemResponse, error)
	// GetStation gets a specific station.
	GetStation(context.Context, *GetStationRequest) (*GetStationResponse, error)
	// GetRace gets a specific race.
	GetRace(context.Context, *GetRaceRequest) (*GetRaceResponse, error)
	// GetRaces returns a list of all races.
	GetRaces(context.Context, *GetRacesRequest) (*GetRacesResponse, error)
	// GetBloodline gets a specific bloodline.
	GetBloodline(context.Context, *GetBloodlineRequest) (*GetBloodlineResponse, error)
	// GetAncestry gets a specific ancestry.
	GetAncestry(context.Context, *GetAncestryRequest) (*GetAncestryResponse, error)
	// GetItemType gets the basic information for a specific item type.
	GetItemType(context.Context, *GetItemTypeRequest) (*GetItemTypeResponse, error)
	// GetItemTypeDetail gets the detailed information for a specific item type.
	GetItemTypeDetail(context.Context, *GetItemTypeDetailRequest) (*GetItemTypeDetailResponse, error)
	// GetMaterialSheet gets a list of materials required to produce an item.
	GetMaterialSheet(context.Context, *GetMaterialSheetRequest) (*GetMaterialSheetResponse, error)
	// QueryItemTypes returns basic information for types matching the input query.
	QueryItemTypes(context.Context, *QueryItemTypesRequest) (*QueryItemTypesResponse, error)
	// QueryItemTypeDetails returns detailed information for types matching the input query.
	QueryItemTypeDetails(context.Context, *QueryItemTypeDetailsRequest) (*QueryItemTypeDetailsResponse, error)
}

func RegisterEveDBServiceServer(s *grpc.Server, srv EveDBServiceServer) {
	s.RegisterService(&_EveDBService_serviceDesc, srv)
}

func _EveDBService_GetRegion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetRegion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetRegion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetRegion(ctx, req.(*GetRegionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetRegions(ctx, req.(*GetRegionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetConstellation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConstellationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetConstellation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetConstellation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetConstellation(ctx, req.(*GetConstellationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetSystem(ctx, req.(*GetSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetStation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetStation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetStation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetStation(ctx, req.(*GetStationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetRace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetRace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetRace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetRace(ctx, req.(*GetRaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetRaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetRaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetRaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetRaces(ctx, req.(*GetRacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetBloodline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBloodlineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetBloodline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetBloodline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetBloodline(ctx, req.(*GetBloodlineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetAncestry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAncestryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetAncestry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetAncestry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetAncestry(ctx, req.(*GetAncestryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetItemType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetItemType(ctx, req.(*GetItemTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetItemTypeDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemTypeDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetItemTypeDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetItemTypeDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetItemTypeDetail(ctx, req.(*GetItemTypeDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_GetMaterialSheet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMaterialSheetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).GetMaterialSheet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/GetMaterialSheet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).GetMaterialSheet(ctx, req.(*GetMaterialSheetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_QueryItemTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryItemTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).QueryItemTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/QueryItemTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).QueryItemTypes(ctx, req.(*QueryItemTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveDBService_QueryItemTypeDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryItemTypeDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveDBServiceServer).QueryItemTypeDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/motki.evedb.EveDBService/QueryItemTypeDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveDBServiceServer).QueryItemTypeDetails(ctx, req.(*QueryItemTypeDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EveDBService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "motki.evedb.EveDBService",
	HandlerType: (*EveDBServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRegion",
			Handler:    _EveDBService_GetRegion_Handler,
		},
		{
			MethodName: "GetRegions",
			Handler:    _EveDBService_GetRegions_Handler,
		},
		{
			MethodName: "GetConstellation",
			Handler:    _EveDBService_GetConstellation_Handler,
		},
		{
			MethodName: "GetSystem",
			Handler:    _EveDBService_GetSystem_Handler,
		},
		{
			MethodName: "GetStation",
			Handler:    _EveDBService_GetStation_Handler,
		},
		{
			MethodName: "GetRace",
			Handler:    _EveDBService_GetRace_Handler,
		},
		{
			MethodName: "GetRaces",
			Handler:    _EveDBService_GetRaces_Handler,
		},
		{
			MethodName: "GetBloodline",
			Handler:    _EveDBService_GetBloodline_Handler,
		},
		{
			MethodName: "GetAncestry",
			Handler:    _EveDBService_GetAncestry_Handler,
		},
		{
			MethodName: "GetItemType",
			Handler:    _EveDBService_GetItemType_Handler,
		},
		{
			MethodName: "GetItemTypeDetail",
			Handler:    _EveDBService_GetItemTypeDetail_Handler,
		},
		{
			MethodName: "GetMaterialSheet",
			Handler:    _EveDBService_GetMaterialSheet_Handler,
		},
		{
			MethodName: "QueryItemTypes",
			Handler:    _EveDBService_QueryItemTypes_Handler,
		},
		{
			MethodName: "QueryItemTypeDetails",
			Handler:    _EveDBService_QueryItemTypeDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "evedb.proto",
}

func init() { proto1.RegisterFile("evedb.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1621 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcd, 0x72, 0xdb, 0x46,
	0x12, 0x2e, 0x88, 0x14, 0x49, 0x34, 0x44, 0xfd, 0x8c, 0x65, 0x9b, 0xa6, 0x6c, 0x8b, 0x1e, 0x5b,
	0x2e, 0x69, 0x7f, 0xe4, 0x5a, 0x79, 0xb7, 0x76, 0xf7, 0xb6, 0xeb, 0x28, 0x51, 0x31, 0x55, 0x76,
	0xd9, 0x90, 0x73, 0x70, 0x0e, 0x61, 0x20, 0x60, 0x22, 0xa1, 0x44, 0x12, 0x10, 0x30, 0x94, 0x43,
	0x5f, 0xf3, 0x06, 0xb9, 0xa6, 0xf2, 0x16, 0x39, 0xe5, 0x69, 0xfc, 0x08, 0x79, 0x84, 0xd4, 0xf4,
	0x0c, 0x7e, 0x06, 0x00, 0x49, 0x53, 0xc9, 0x49, 0x9c, 0xee, 0x9e, 0x6f, 0xbe, 0xfe, 0x41, 0xf7,
	0x8c, 0xc0, 0x62, 0xd7, 0xcc, 0x3b, 0x3b, 0x0c, 0xa3, 0x80, 0x07, 0xc4, 0x1a, 0x05, 0xfc, 0xd2,
	0x3f, 0x44, 0x51, 0x57, 0x2d, 0x50, 0x43, 0xbf, 0x81, 0x7a, 0xdf, 0x0d, 0xc6, 0xe4, 0x2e, 0x34,
	0x7d, 0x37, 0x18, 0x0f, 0x7c, 0xaf, 0x63, 0xf4, 0x8c, 0xfd, 0x9a, 0xdd, 0x10, 0xcb, 0xbe, 0x47,
	0x76, 0xc0, 0xf4, 0x47, 0xce, 0x39, 0x1b, 0x4c, 0xa2, 0x61, 0x67, 0xa5, 0x67, 0xec, 0x9b, 0x76,
	0x0b, 0x05, 0x5f, 0x45, 0x43, 0xd2, 0x03, 0xcb, 0x63, 0xb1, 0x1b, 0xf9, 0x21, 0xf7, 0x83, 0x71,
	0xa7, 0x86, 0xea, 0xbc, 0x88, 0xfe, 0x64, 0x40, 0xdd, 0x76, 0x5c, 0x26, 0x0e, 0x88, 0x1c, 0x97,
	0xe5, 0x0e, 0x10, 0xcb, 0xbe, 0x47, 0x08, 0xd4, 0xc7, 0xce, 0x88, 0x29, 0x6c, 0xfc, 0xbd, 0x18,
	0x97, 0x3c, 0x00, 0x88, 0x2f, 0x82, 0x88, 0x0f, 0x84, 0xb0, 0x53, 0x47, 0x03, 0x13, 0x25, 0xc7,
	0x2c, 0x76, 0xc9, 0x1e, 0xd4, 0x05, 0xff, 0xce, 0x6a, 0xcf, 0xd8, 0xb7, 0x8e, 0xb6, 0x0e, 0x73,
	0xfe, 0x1f, 0x0a, 0x7f, 0x6d, 0x54, 0xd3, 0x8f, 0x2b, 0xd0, 0xfa, 0xff, 0xd8, 0x65, 0x31, 0x8f,
	0xa6, 0x64, 0x17, 0x2c, 0x47, 0xfd, 0xce, 0x58, 0x42, 0x22, 0xba, 0x31, 0xd3, 0x47, 0xb0, 0x76,
	0x36, 0x0c, 0x02, 0x6f, 0xe8, 0x8f, 0xd1, 0xfb, 0x3a, 0xe2, 0x5a, 0xa9, 0xac, 0xef, 0x91, 0x87,
	0x00, 0x21, 0x8b, 0x5c, 0x26, 0x31, 0x56, 0xe5, 0xc1, 0x99, 0x84, 0xdc, 0x07, 0xf3, 0xbd, 0x3f,
	0x1c, 0x86, 0xc1, 0x7b, 0x16, 0x75, 0x1a, 0xa8, 0xce, 0x04, 0xa4, 0x0b, 0x2d, 0xf7, 0xc2, 0x89,
	0xfc, 0x78, 0xe4, 0x74, 0x9a, 0xa8, 0x4c, 0xd7, 0xe4, 0x0e, 0x34, 0x46, 0x6c, 0x14, 0x44, 0xd3,
	0x4e, 0x4b, 0x06, 0x5d, 0xae, 0x08, 0x85, 0x35, 0x7f, 0xcc, 0xd9, 0x70, 0xe8, 0x9f, 0xb3, 0xb1,
	0xcb, 0x3a, 0x26, 0x6a, 0x35, 0x59, 0x21, 0xc4, 0x30, 0x2b, 0xc4, 0xd6, 0xfc, 0x10, 0xff, 0x52,
	0x07, 0xf3, 0x45, 0xe2, 0x6b, 0x29, 0x18, 0x46, 0x39, 0x18, 0x55, 0x51, 0xce, 0x15, 0x4f, 0x4d,
	0x2b, 0x9e, 0x42, 0xf8, 0xeb, 0xe5, 0xf0, 0xef, 0x80, 0x39, 0x72, 0x86, 0x4c, 0x3a, 0xb1, 0x2a,
	0xeb, 0x57, 0x08, 0xd0, 0x87, 0x5d, 0xb0, 0xbe, 0x63, 0x99, 0xba, 0x81, 0x6a, 0x90, 0x22, 0x34,
	0xe8, 0xc1, 0x5a, 0x7c, 0xe1, 0x87, 0x03, 0x3e, 0x0d, 0xf1, 0x74, 0x19, 0x5f, 0x10, 0xb2, 0xb7,
	0xd3, 0x50, 0x30, 0xd8, 0x83, 0x75, 0x37, 0x88, 0xc2, 0x20, 0x72, 0xc4, 0x71, 0xc2, 0x46, 0x46,
	0xba, 0x9d, 0x93, 0x96, 0x52, 0x6c, 0xce, 0x4f, 0x31, 0xcc, 0x4b, 0xb1, 0x35, 0x33, 0xc5, 0x6b,
	0x73, 0x53, 0xdc, 0x5e, 0x98, 0xe2, 0xf5, 0x62, 0x8a, 0x9f, 0xc2, 0x86, 0x54, 0x67, 0x21, 0xda,
	0x40, 0x9b, 0x36, 0x8a, 0x5f, 0x26, 0x51, 0xfa, 0x0b, 0x6c, 0x49, 0xbb, 0x7c, 0x30, 0x37, 0xd1,
	0x52, 0x02, 0x7c, 0x91, 0x45, 0x34, 0x29, 0x9b, 0xad, 0xf9, 0x65, 0xf3, 0xb3, 0x01, 0x8d, 0xd3,
	0x69, 0xcc, 0xd9, 0x48, 0x64, 0x30, 0xc6, 0x5f, 0x59, 0xc1, 0xb4, 0xa4, 0x60, 0x46, 0xb5, 0xec,
	0x80, 0x19, 0xb1, 0x73, 0x95, 0x0d, 0x59, 0x2f, 0x2d, 0x29, 0xe8, 0x7b, 0xe4, 0x00, 0x36, 0xdd,
	0x60, 0x1c, 0x8b, 0x20, 0xa4, 0x19, 0x93, 0x9f, 0xe4, 0x86, 0x26, 0xef, 0x7b, 0x22, 0xea, 0x31,
	0x73, 0x27, 0x91, 0xcf, 0xa7, 0x58, 0x39, 0x86, 0x9d, 0xae, 0xe9, 0x25, 0xb4, 0x3f, 0xcb, 0x9b,
	0x57, 0xe2, 0x1a, 0xd5, 0xb8, 0xcb, 0x72, 0xa6, 0xff, 0x85, 0x86, 0x8d, 0xbf, 0x75, 0x33, 0xa3,
	0xe0, 0x5a, 0x05, 0x2e, 0xfd, 0xcd, 0x80, 0xe6, 0x29, 0x77, 0xd2, 0x9e, 0xc9, 0x0b, 0xe4, 0x4c,
	0x25, 0xe9, 0x7b, 0x98, 0x6d, 0xa5, 0x4e, 0xca, 0x7d, 0x45, 0x96, 0xb2, 0x12, 0xcf, 0xac, 0xf8,
	0x5a, 0x55, 0xc5, 0x6b, 0x69, 0xab, 0x17, 0xd2, 0x56, 0x15, 0xad, 0xd5, 0xea, 0x68, 0x69, 0x2e,
	0x37, 0x66, 0xb8, 0xdc, 0xcc, 0xb9, 0xfc, 0x0e, 0x5a, 0x7d, 0xce, 0x46, 0x82, 0xad, 0x68, 0x1c,
	0x89, 0x2f, 0x6a, 0xea, 0x70, 0xe9, 0xc4, 0x8d, 0x7a, 0x39, 0xfd, 0x58, 0x83, 0xf5, 0x04, 0xfb,
	0x98, 0x71, 0xc7, 0x1f, 0xfe, 0xc9, 0x27, 0x90, 0x7b, 0xd0, 0x3a, 0x8f, 0x82, 0x49, 0x98, 0x05,
	0xad, 0x89, 0xeb, 0xbe, 0x27, 0xd2, 0x27, 0x55, 0x08, 0x2b, 0x5b, 0x99, 0x89, 0x92, 0x57, 0x02,
	0x7b, 0x17, 0x2c, 0xd7, 0xe1, 0xec, 0x3c, 0x90, 0xe3, 0x4b, 0x46, 0x0a, 0x12, 0x51, 0xdf, 0x23,
	0x8f, 0xa1, 0x9d, 0x1a, 0xe4, 0x82, 0xb6, 0x96, 0x08, 0x11, 0x85, 0x40, 0x7d, 0xe4, 0xc4, 0x31,
	0x36, 0x31, 0xc3, 0xc6, 0xdf, 0xa2, 0xc3, 0x5c, 0x07, 0xc3, 0xc9, 0x48, 0x8e, 0x09, 0xc3, 0x56,
	0x2b, 0xec, 0x4a, 0x4e, 0xe8, 0xb8, 0xe2, 0xfb, 0x00, 0xf9, 0x7d, 0x24, 0x6b, 0xd1, 0xe8, 0xc3,
	0x20, 0xc2, 0xd4, 0xc6, 0xfe, 0x07, 0xa6, 0xba, 0x96, 0xa5, 0x64, 0xa7, 0xfe, 0x07, 0x6c, 0x3e,
	0x67, 0x4e, 0xcc, 0x06, 0x61, 0xe4, 0xbb, 0x0c, 0x9b, 0x97, 0x61, 0x9b, 0x42, 0xf2, 0x5a, 0x08,
	0xc8, 0x13, 0x58, 0x0f, 0x9d, 0x88, 0x8d, 0x79, 0x5a, 0x8d, 0xaa, 0x83, 0x49, 0xa9, 0x2a, 0x46,
	0x1c, 0x28, 0x13, 0x16, 0x46, 0xfe, 0x98, 0x0b, 0x9b, 0xf5, 0x64, 0xa0, 0x28, 0x59, 0xdf, 0x23,
	0x7f, 0x03, 0xe2, 0xb1, 0xc8, 0xbf, 0x76, 0xb8, 0x7f, 0xcd, 0x52, 0xb0, 0x8d, 0x5e, 0x6d, 0xbf,
	0x66, 0x6f, 0x66, 0x1a, 0x09, 0x48, 0x7f, 0x34, 0xa0, 0xfd, 0xd2, 0xe1, 0x2c, 0xf2, 0x9d, 0xe1,
	0xe9, 0x05, 0x63, 0x9c, 0x1c, 0x40, 0x5d, 0x6c, 0xc2, 0xf4, 0x5a, 0x47, 0xb7, 0xf5, 0x8e, 0xa5,
	0x8a, 0xc1, 0x46, 0x13, 0xf2, 0x5c, 0x0c, 0x1b, 0xb9, 0x37, 0xee, 0xac, 0xf4, 0x6a, 0x25, 0xfb,
	0x04, 0xd9, 0xce, 0xec, 0x30, 0x54, 0x51, 0xe0, 0x4d, 0x5c, 0x16, 0x0f, 0xae, 0xf8, 0x54, 0x7d,
	0x4d, 0x56, 0x22, 0x7b, 0xc3, 0xa7, 0xf4, 0x0d, 0xb4, 0x92, 0x9d, 0xcb, 0xd0, 0xe9, 0x42, 0xeb,
	0x6a, 0xe2, 0x8c, 0xb9, 0x48, 0x90, 0xfc, 0x94, 0xd3, 0x35, 0x7d, 0x06, 0x9b, 0x27, 0x8c, 0xcb,
	0xb6, 0x62, 0xb3, 0xab, 0x09, 0x8b, 0xf9, 0xdc, 0xee, 0x42, 0xcf, 0x61, 0x2b, 0xb7, 0x21, 0x0e,
	0x83, 0x71, 0xcc, 0xc8, 0x1e, 0x34, 0x22, 0x16, 0x4f, 0x86, 0x5c, 0xd1, 0x69, 0x2b, 0x3a, 0x36,
	0x0a, 0x6d, 0xa5, 0x24, 0x7f, 0x15, 0x66, 0x62, 0x23, 0xd2, 0xb0, 0x8e, 0x6e, 0x69, 0xac, 0x15,
	0xa6, 0x32, 0xa1, 0xb7, 0x72, 0x07, 0xc5, 0x8a, 0x1a, 0xbd, 0x00, 0x92, 0x17, 0xde, 0xfc, 0xf8,
	0xda, 0xa2, 0xe3, 0x8f, 0xe1, 0xee, 0x09, 0xe3, 0x5a, 0x73, 0x4f, 0xe2, 0xf3, 0xe9, 0x3d, 0x9e,
	0xfe, 0x60, 0x40, 0xa7, 0x0c, 0xb3, 0x1c, 0xed, 0xff, 0x41, 0x5b, 0x83, 0x55, 0xc1, 0xeb, 0x6a,
	0xec, 0xf5, 0x13, 0xf4, 0x0d, 0x2a, 0xc9, 0x72, 0x8e, 0xe6, 0x92, 0x3c, 0x73, 0x9c, 0xaa, 0x24,
	0x27, 0x1b, 0x96, 0x8e, 0xb2, 0xc4, 0xa9, 0x4c, 0xb2, 0xc2, 0x54, 0x26, 0xf4, 0x00, 0xd6, 0x45,
	0x3e, 0x1d, 0x97, 0x25, 0xbc, 0x66, 0x3d, 0x10, 0xe8, 0x00, 0x36, 0x52, 0xd3, 0xe5, 0x18, 0xed,
	0x41, 0x5d, 0x60, 0x28, 0x3e, 0xfa, 0x5d, 0x03, 0xf1, 0x50, 0x4d, 0xb7, 0xd2, 0x03, 0xd2, 0x72,
	0xfb, 0x56, 0x7e, 0x1d, 0x52, 0x74, 0xd3, 0x43, 0x6b, 0xf3, 0x0e, 0xfd, 0x0f, 0xdc, 0x3a, 0x61,
	0x3c, 0xbd, 0x19, 0x27, 0x51, 0x58, 0x7c, 0x41, 0xa6, 0x31, 0x6c, 0xeb, 0x3b, 0x97, 0xe3, 0xf7,
	0x4f, 0x30, 0x53, 0x34, 0x15, 0x99, 0x3b, 0x1a, 0xc9, 0x0c, 0x39, 0x33, 0xa4, 0xff, 0xc2, 0xef,
	0x2f, 0x79, 0x2b, 0x25, 0x6c, 0x17, 0x3d, 0x99, 0x68, 0x80, 0x5e, 0x66, 0xdb, 0x96, 0xa3, 0xfa,
	0x0f, 0x68, 0x25, 0x58, 0x8a, 0xa9, 0xde, 0xee, 0x52, 0xdc, 0xd4, 0x8c, 0xfe, 0x1d, 0x79, 0xa6,
	0x7d, 0x30, 0xab, 0xad, 0xca, 0x21, 0x4d, 0xcf, 0x91, 0x5f, 0x66, 0xbe, 0x1c, 0xbf, 0xa4, 0x15,
	0xaf, 0x2c, 0x6c, 0xc5, 0xf4, 0x39, 0xb6, 0x03, 0xfd, 0xee, 0xb0, 0x90, 0x5d, 0x0c, 0xf7, 0x2a,
	0x36, 0x2d, 0xc7, 0xf1, 0x99, 0xc6, 0x71, 0xa7, 0x92, 0xa3, 0x42, 0x96, 0x4c, 0x5f, 0xc1, 0xed,
	0x37, 0x13, 0x16, 0x4d, 0x13, 0x65, 0xf2, 0x4d, 0x90, 0x6d, 0x58, 0xbd, 0x12, 0x0a, 0x3c, 0xcf,
	0xb4, 0xe5, 0xa2, 0x78, 0xed, 0x58, 0xc1, 0xb1, 0x9a, 0xbb, 0x76, 0xd0, 0x21, 0xdc, 0x29, 0xe2,
	0x2d, 0xdb, 0x57, 0x56, 0x05, 0xb1, 0xea, 0x81, 0x9a, 0x86, 0x59, 0xda, 0xd0, 0xb7, 0xb0, 0xa3,
	0x9d, 0x26, 0x5d, 0xfb, 0xa3, 0x3e, 0x7c, 0x0f, 0xf7, 0xab, 0x51, 0x97, 0xad, 0x67, 0xcd, 0x93,
	0xb9, 0xc9, 0x50, 0xfe, 0x1c, 0xe1, 0x34, 0xd2, 0x2e, 0x24, 0x0b, 0xcb, 0xe6, 0x03, 0xd6, 0x5a,
	0x61, 0xcf, 0x72, 0x4c, 0xff, 0x8d, 0x17, 0x99, 0x41, 0x2c, 0xf6, 0x56, 0x8e, 0x1d, 0x1d, 0xbd,
	0x35, 0x72, 0x38, 0xfe, 0xa2, 0x47, 0x72, 0x80, 0x70, 0x6d, 0x6e, 0xce, 0x7f, 0x78, 0xd0, 0x4b,
	0xfc, 0x66, 0xd3, 0x3d, 0xcb, 0x31, 0x3d, 0x84, 0xa6, 0x42, 0x52, 0x3c, 0xb7, 0xf5, 0xb1, 0xa3,
	0x50, 0x13, 0xa3, 0xa3, 0x5f, 0x4d, 0x58, 0xfb, 0xfc, 0x9a, 0x1d, 0xbf, 0x38, 0x65, 0xd1, 0xb5,
	0xb8, 0x67, 0x7e, 0x09, 0x66, 0x7a, 0xb3, 0x20, 0x0f, 0xb4, 0xcd, 0xc5, 0x0b, 0x52, 0xf7, 0xe1,
	0x2c, 0xb5, 0xe2, 0xfc, 0x12, 0x20, 0xbb, 0xa5, 0x90, 0x19, 0xd6, 0x49, 0x31, 0x76, 0x77, 0x67,
	0xea, 0x15, 0xdc, 0x00, 0xa7, 0x90, 0xfe, 0xce, 0x7c, 0x52, 0xdc, 0x54, 0x75, 0x53, 0xe9, 0xee,
	0x2d, 0xb0, 0x52, 0x07, 0x48, 0xdf, 0xd5, 0x3b, 0xbb, 0xe4, 0xbb, 0x76, 0x6f, 0x28, 0xfb, 0x5e,
	0xb8, 0x25, 0x48, 0xdf, 0x93, 0xb7, 0x66, 0xd9, 0x5a, 0x2b, 0x89, 0xb2, 0xef, 0xc5, 0xf4, 0x1f,
	0x43, 0x53, 0x4d, 0x60, 0xb2, 0x53, 0x8a, 0x53, 0x76, 0x6d, 0xe8, 0xde, 0xaf, 0x56, 0x2a, 0x94,
	0x13, 0x68, 0x25, 0x73, 0x9c, 0x54, 0x5a, 0xa6, 0xc9, 0x78, 0x30, 0x43, 0xab, 0x80, 0x4e, 0x61,
	0x2d, 0x3f, 0x74, 0x49, 0xaf, 0x68, 0x5e, 0x9c, 0xe4, 0xdd, 0x47, 0x73, 0x2c, 0x14, 0xe8, 0x6b,
	0xb0, 0x72, 0xd3, 0x91, 0x94, 0x62, 0x52, 0x18, 0xb7, 0xdd, 0xde, 0x6c, 0x03, 0x0d, 0x31, 0x7d,
	0xfe, 0x96, 0x10, 0x0b, 0x83, 0xb1, 0x8c, 0x58, 0x1a, 0x85, 0x67, 0xf8, 0x41, 0x17, 0x1e, 0xbd,
	0x7b, 0xb3, 0xb6, 0x69, 0x83, 0xad, 0xfb, 0x74, 0x91, 0x99, 0x56, 0xe7, 0xfa, 0xab, 0xab, 0x54,
	0xe7, 0x55, 0x3d, 0xb0, 0x5c, 0xe7, 0xd5, 0x5d, 0xef, 0x1d, 0xac, 0xeb, 0x33, 0x88, 0x50, 0x6d,
	0x63, 0xe5, 0xc0, 0xeb, 0x3e, 0x9e, 0x6b, 0xa3, 0xa0, 0x2f, 0x61, 0xbb, 0x6a, 0x34, 0x90, 0xfd,
	0xd9, 0x9b, 0xf5, 0x99, 0xd4, 0x3d, 0xf8, 0x04, 0x4b, 0x79, 0xd8, 0x8b, 0xe6, 0xd7, 0xab, 0xf8,
	0x6f, 0xfb, 0xb3, 0x06, 0xfe, 0x79, 0xfe, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0x10, 0x69,
	0x07, 0xe6, 0x17, 0x00, 0x00,
}
